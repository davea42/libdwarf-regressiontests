October 27, 2020

These fuzzed testcases are from 
Casper Sun.  He reports each
shows an uncaught error.

valgrind does not report any errors.

He writes:

Reproduce steps:
1. Compile libdwarf with address sanitizer
2. Run command "./dwarfdump -vv -a [poc file]‚Äù

output example:
=================================================================
==86535==ERROR: AddressSanitizer: global-buffer-overflow on address 0x0000013a0e00 at pc 0x0000005affaf bp 0x7ffe3cfe3790 sp 0x7ffe3cfe3788
WRITE of size 8 at 0x0000013a0e00 thread T0
    #0 0x5affae in print_die_and_children_internal /home/casper/targets/struct/libdwarf/afl/BUILD/dwarfdump/print_die.c:1549:13


globaloverflow	
There is a circular DIE loop noted at stack index 2
and at index 869 (at which point dwarfdump stops
printing DIEs).  Normally the 869 stack
index won't be seen as the normal DIE_STACK_SIZE
(in dwarfdump/print_die.c) is a 
fixed 800 entries. Instead an error about stack
overflow will be printed.
There are no loops in the 869 depth till one gets
to the very end. Fascinating testcase.


heapoverflowa (really has no new problem)	

nullpointer  
In the line table header file table the DWARF5
PATH form is bogus so previously a null passed to
dwarfstring_append_printf_s from fe_fi_file_name.


