2023-12-08:  David Anderson
    commit 6ddf8840633807106855bd370f2ade8ad3e63c8d

    up to date with git log
            modified:   ChangeLog

2023-12-02:  David Anderson
    commit 51d13a789961ef3291af07c22c678745a1cd0fd6

    Up to date with git log
            modified:   ChangeLog

2023-12-02:  David Anderson
    commit 114e8f10a4e18468d06c369842edabfa870d69e2

    New tests of --print-machine-arch
    all passing except not all of dwarfdump-msys2.O.
            modified:   DWARFTEST.sh
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-macos.O
            modified:   dwarfdump-msys2.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-12-02:  David Anderson
    commit 359a035a6710aa81936c2fd886259c97777ad3f0

    Now in runsingle() we only emit one FAIL message
    so fail counts are correct.
            modified:   DWARFTEST.sh

2023-12-02:  David Anderson
    commit ce0e26111ae061d44114945902ad0ef992060ee7

    Now with machine architecture name printed
            modified:   baselines/machinearchpe.base
            modified:   baselines/machinearchpev.base

2023-12-01:  David Anderson
    commit 40dde08472f9c8b01b7193e6ce592f609f319b5f

    Added tests of --print-machine-arch
            modified:   DWARFTEST.sh
    Now baseline for one of those tests.
            modified:   baselines/machinearchunivbinv.base

    Up to date with latest.
            modified:   dwarfdump-x86_64-ubuntu.O

2023-12-01:  David Anderson
    commit c63ed126955226f7a2f060b1d9ee7aea4641a590

    New tests and baselines
            new file:   baselines/machinearchi386.base
            new file:   baselines/machinearchi386v.base
            new file:   baselines/machinearchpe.base
            new file:   baselines/machinearchpev.base
            new file:   baselines/machinearchunivbin.base
            new file:   baselines/machinearchunivbinun1.base
            new file:   baselines/machinearchunivbinv.base
            new file:   baselines/machinearcmacho.base
            new file:   baselines/machinearcmachov.base
            new file:   baselines/ossfuzz64496.base

2023-11-25:  David Anderson
    commit 200104016693f7ff665bd387446c39d3b21070de

    Two new ossfuzz tests DW202311-001 and 002.
            modified:   DWARFTEST.sh

2023-11-25:  David Anderson
    commit 41d123050ffd435f01394185152c13d4126289ba

    Just changes the total count so percentage
    of completion numbers look right.
            modified:   python2/showpct.py
            modified:   python3/showpct.py

2023-11-25:  David Anderson
    commit 3cf2e0dc46d2771760198ed267cc65b9151475af

    Bogus input noted earlier in the object file,
    changing the test output.
            modified:   baselines/ossfuzz56472.base
    newtestcase
            new file:   ossfuzz64496/fuzz_debuglink-6154376638234624

2023-11-25:  David Anderson
    commit d6eb99fecb2fc2a718ea854f0b0549d99e3521d6

    Old ossfuzz, but we had not heard about it before Nov 24 2023!
            new file:   baselines/ossfuzz56452.base
            new file:   ossfuzz56452/fuzz_debuglink-cs4231a-5927365017731072

2023-11-17:  David Anderson
    commit f346b19f2b51c90037ceee820d5fc4a930ddcc91

    Up to date with git log
            modified:   ChangeLog

2023-11-17:  David Anderson
    commit 1531dc1ddfd2eee3bc0be8cb9c7e6355ab9acf35

    Now with small differences from the past
    due to revising the dwarf_next_cu_header_d
    in dwarfdump to
    the dwarf_next_cu_header_e function.
    The differences are all due to a testcase
    with a mangled .debug_info with some really
    bad content (a test case run multiple times
    with different options).
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-macos.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-11-17:  David Anderson
    commit d389e10294fa8c4f59ef6c3509a77f0d0beaeef3

    now building fuzz tests using new cu_header interface function.
            modified:   DWARFTEST.sh

2023-11-07:  David Anderson
    commit 3484fb1ed06bb0a229c1016dc3b5040f76930ada

    This is a cleanup not usually used.

    If running regressiontests in a clean directory
    then this is unnecessary (there is nothing to
    save anyway), but usable there.

    If you run regressiontests in the regressiontests source
    (Do Not Do That) this might be useful, but you will have to
    delete the few lines at the beginning that refuse to let this
    run in the regressiontests source directory.
            modified:   CLEANUP.sh

2023-11-05:  David Anderson
    commit efb583d4da24da7370aae1a95d022cb65895bdd9

    regression testing results.
            modified:   ChangeLog

2023-11-05:  David Anderson
    commit 51c974d25a6352ca9753d504998b76e2bf9c476b

    Results today
            modified:   RegressionTestsResults.ods

2023-11-05:  David Anderson
    commit dcbae6f6753ead4101e3f0085f012241d1378ee6

    now we have zlib and libzstd on s390 so files with compressed
    section show real data from dwarfdump, not complaints
    about missing uncompress software.
            modified:   dwarfdump-s390.O

2023-11-03:  David Anderson
    commit 8d9615943be87b319282dcf8a1a34fc612a07159

    Up to date with git log
            modified:   ChangeLog

2023-11-03:  David Anderson
    commit 55325d0ef2a80b51bb50e7818cb28311993ad752

    Macos now passes regressiontesting.
            modified:   dwarfdump-macos.O

2023-11-03:  David Anderson
    commit f0a42b1aee13e531541054c477ec772552973dfb

    Renamed a local variable and fixed
    a string used for removing machine-specific
    pathnames from a couple of tests.
            modified:   DWARFTEST.sh

2023-11-03:  David Anderson
    commit 114ba629279b80f4d1367f99c2386654753ec827

    Removing print() statements used for debugging.
            modified:   scripts/canonicalpath.py

2023-11-02:  David Anderson
    commit 4ec3d8e008821ddc66d9ef8f4a9e52977dcdd77a

    Remove 'set -x' and +x.
            modified:   PICKUPBIN.sh
    Fix a test of exit code to use -ne
            modified:   RUNALL.sh

2023-11-02:  David Anderson
    commit 9befe643b3af55f91eadbf1d5e1bedf4e54e7953

    Now that the generated BASEFILES.sh has more useful
    information, and these all source it,
    we can enable more things to work correctly
    across system types.
            modified:   baddie1/runtest.sh
            modified:   bigobj/runtest.sh
            modified:   debugfission/runtest.sh
            modified:   debugfissionb/runtest.sh
            modified:   debuglink/runtest.sh
            modified:   dwgena/runtest.sh
            modified:   dwgenc/runtest.sh
            modified:   err_allocate/runtest.sh
            modified:   filelist/runtest.sh
            modified:   findcu/runtest.sh
            modified:   frame1/runtest.sh
            modified:   guilfanov/runtest.sh
            modified:   guilfanov2/runtest.sh
            modified:   hughes2/runtest.sh
            modified:   implicitconst/runtest.sh
            modified:   legendre/runtest.sh
            modified:   mustacchi/runtest.sh
            modified:   navarro/runtest.sh
            modified:   nolibelf/runtest.sh
            modified:   offsetfromlowpc/runtest.sh
            new file:   scripts/testcanonical.sh
            modified:   showsecgroupsdir/runtest.sh
            modified:   supplementary/runtest.sh
            modified:   test-alex1/runtest.sh
            modified:   test-alex2/runtest.sh
            modified:   testfindfuncbypc/runtest.sh
            modified:   testoffdie/runtest.sh
            modified:   williamson/runtest.sh

2023-11-02:  David Anderson
    commit 357b7e1d42b993c21c1769da97d4e605cf5a31d8

    This now does all name transformations
    (whether of a single name or a file with
    pathnames) for independence from
    locations and systems.
            modified:   scripts/canonicalpath.py

2023-11-02:  David Anderson
    commit 4925e0dedd8bbff9d89326640b7dd774d9a89f41

    Now with a much better approach
    to making the tests work in multiple
    places and systems.
            modified:   DWARFTEST.sh
            modified:   INITIALSETUP.sh
            modified:   RUNALL.sh

2023-11-02:  David Anderson
    commit 608333e833a9c826dcd6b836b3958b758c264e74

    New baselines reflecting latest method for
    making test results comparable across
    different systems and file-system locations of the
    tests and source.
            modified:   baselines/dwdebuglink-a.base
            modified:   baselines/dwdebuglink-b.base
            modified:   baselines/test_findfuncbypcb1.base
            modified:   baselines/test_findfuncbypcb4.base
            modified:   baselines/test_findfuncbypcb5.base

2023-10-31:  David Anderson
    commit 0dcb05d310104eb21f7181edc7f0e39a5669f537

    Minor change to initial wording for completeness.
            modified:   BASEFILES.sh.in

2023-10-29:  David Anderson
    commit 06dfa10d3a0451cf245aa805ab57c2ab1d802a8d

    Updating baseline executable due to new&correct formatting
    of DW_AT_data_bit_offset value.
            modified:   dwarfdump-s390.O

2023-10-28:  David Anderson
    commit 7b25d80c7a161d32ede99f675b41718e818bc11b

    The new zlib libzstd approach is working here.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-10-28:  David Anderson
    commit 43f501ad4f95fbea1d569504ab9e2e8118382b1b

    Reflects the new and better printing of DW_AT_data_bit_offset
    attribute value.
            new file:   baselines/databitoffset.base

2023-10-28:  David Anderson
    commit 05292db7582b6c3a42cc9b45e26d163b0c5f2fd8

    Major revision of zlib and libzstd handling.
    As in meson, if one is missing library or header
    then both are ignored.  Treating these
    individually (as before now) was an accident of history
    and no longer seems useful. Makes understanding
    the code referring to these libraries
    much easier.
            modified:   DWARFTEST.sh

2023-10-28:  David Anderson
    commit 184f2b052d5cda10ed94d95b71ea6e3c36e60a50

    No longer runs CLEANUP. Better to leave things there
    for inspection.
            modified:   RUNALL.sh

2023-10-28:  David Anderson
    commit 071b91d2922be0544b42425eb14cc43f6b8e2de4

    Simpler wording describing what this is for
            modified:   BASEFILES.sh.in

2023-10-28:  David Anderson
    commit 895b8301230c2e7b05b6655ab773782223b234ee

    These now do a small compile to determine where
    libz and libzstd, and returns an exit code meaning
    'both in standard places'
    'one or both missing'
    'one or both in /opt/local in /usr/local'
    and adds data to BASENAMES.sh to be used
    when compiling during the testing.
            modified:   checkforlibz/runtest.sh
            modified:   checkforlibzstd/runtest.sh

2023-10-28:  David Anderson
    commit ff2ab8306f5160315d0a56bc6db8cc430795b870

    All these use the generated BASEFILES.sh to determine link
    and cpp options for zlib and libzstd.
            modified:   bitoffset/test_bitoffset.c
            modified:   findcu/runtest.sh
            modified:   legendre/runtest.sh
            modified:   test-alex1/runtest.sh
            modified:   test-alex2/runtest.sh
            modified:   testoffdie/runtest.sh

2023-10-24:  David Anderson
    commit 106b4e5bf5c0ad6fc26859dfe1c8ffaaa7b333ce

    What dwarfdump printed for DW_AT_data_bit_offset was
    sometimes a useless negative value.
    Now prints a sensible hex value.
            new file:   databitoffset/README
            new file:   databitoffset/dbotest.c
            new file:   databitoffset/dbotest.o

2023-10-23:  David Anderson
    commit 309c8b952e7960ba3c7ef5b1be57c3f004445dd8

    We no longer use make in regression testing.
            deleted:    Makefile.in

2023-10-23:  David Anderson
    commit b56653b9510496c2ed60ce13ff60bdd25513b3f7

    Making this more cautious to avoid deleting too much.
            modified:   CLEANUP.sh
    Clarified recent comments.
            modified:   README.md

2023-10-23:  David Anderson
    commit 86db44eef206906aa359962b72ba241b43d0d09c

    This radically changes the regression tests to run
    as shell scripts, meson, and python3.
            modified:   BASEFILES.sh.in
            renamed:    configure.ac -> INITIALSETUP.sh
            modified:   README.md
            deleted:    configure

2023-10-22:  David Anderson
    commit c6a610828428872d426a89b7fc204acf3edff386

    Now we use meson/ninja to build
    for regressiontesting.

    We do not use make anywhere, it is
    all relatively simple shell scripts.

    configure is used (with no options) just to
    establish directory locations.

    We do keep a single Makefile.in (which we ignore)
    to avoid a warning from the initial configure.
            modified:   BASEFILES.sh.in
            modified:   Makefile.in
            modified:   PICKUPBIN.sh
            modified:   README.md
            modified:   RUNALL.sh

2023-10-21:  David Anderson
    commit fa5a0054a1aef9522b4cea5b6775607bb4583399

    These were checking HAVE_STRING_H and HAVE_STDLIB_H
    which is silly as we assume C90 is in use.
    Removed the checks.
            modified:   test_arange.c
            modified:   test_pubsreader.c
            modified:   test_sectionnames.c
            modified:   test_setframe.c

2023-10-20:  David Anderson
    commit 0a4be3b820adceb788dfeaa86e6008cca0dc6034

    We need this to run full tests
            new file:   dwarfdump-msys2.O
    Fixing error messages.
            modified:   dwdiff.py

2023-10-20:  David Anderson
    commit cd350dd65890d5a9874b9cf1d8ba65f69192b575

    Using option to diff to drop windows cr character.
            modified:   DWARFTEST.sh

    regeneratee
            modified:   config.h.in
            modified:   configure
    using dwdiff.py
            modified:   configure.ac

    New baseline dwarfdump
            modified:   dwarfdump-macos.O

2023-10-20:  David Anderson
    commit 52291bc53152fd961efe2d6d23a4f1170c646dbd

    A simple python diff program. Drops
    cr/lf and plain lf so compares posix to windows
    ouptput pass.
            new file:   dwdiff.py

2023-10-19:  David Anderson
    commit cb46f13ff6bb0839010140fb4642bd1fafb7999c

    More small changes.
            modified:   README.md

2023-10-19:  David Anderson
    commit 9a2062017540c7bbc90f8b28fbdec87c856bded8

    More tweaks and explanation.
            modified:   README.md

2023-10-19:  David Anderson
    commit 05b87fee04adcba6ec1807909f5453175207bcb4

    Now with latest  vulnerability test
            modified:   DWARFTEST.sh

    Updated the advice for people wishing to run the test suite.
            modified:   README.md

    modified baseline text output
            modified:   baselines/frame1-2018.base
            modified:   baselines/frame1-orig.base
            modified:   baselines/macuniv.base
            modified:   baselines/macuniv0.base
            modified:   baselines/macuniv1.base

    New baseline executables (using static libdwarf.a)
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-macos.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-10-18:  David Anderson
    commit 2e756378c0e835171db917903e3c87ff6819778a

    Vulnerability fixed recentl.
            new file:   baselines/ossfuzz63024.base

2023-10-06:  David Anderson
    commit 18da8baa56b2cd5e8cb4ee2da7cf3f1f3df785a0

    New failure.
            new file:   ossfuzz63024/fuzz_macro_dwarf4-4887579306360832

2023-10-03:  David Anderson
    commit 751b5d822e4b613fffc24928ed7f2b3c9f61879d

    new baseline covering latest Mach-O and

    a correction in a new error message
    relating to MachO.
            modified:   dwarfdump-x86_64-ubuntu.O

2023-10-03:  David Anderson
    commit 1a4c9fc7f153f99aa7a673893bd1f1ebc53a2198

    Example of a test
            modified:   RUNVAL

2023-10-03:  David Anderson
    commit a59fedc159f9114d6659927a3accad528ab400e6

    Latest test of Mach-O universal binary
            modified:   DWARFTEST.sh

2023-10-03:  David Anderson
    commit 4641a092893895a2faccc24fdf711c9ceb365042

    Result of new test
            new file:   baselines/ossfuzz62943.base

2023-10-03:  David Anderson
    commit 39e8ff02582f00177f8fe615df11b2f1912a4db7

    Might be fixed already...maybe
            new file:   ossfuzz62943/fuzz_init_path-5486726493372416

2023-10-03:  David Anderson
    commit 496f11c9b3f6f2d6a7246e0d6ab104663465146f

    New test baselines
            modified:   baselines/ossfuzz62833.base
            modified:   baselines/ossfuzz62834.base

2023-10-01:  David Anderson
    commit b2f98cae726be30d8fe337b12f57d09a5391f396

    Latest baseline executable.
            modified:   dwarfdump-macos.O

2023-09-30:  David Anderson
    commit 7c595188afd3f3d50481c8fffa176a7bb9a2452f

    New baseline executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-09-30:  David Anderson
    commit ed99dd7a6e9f3eb492559d2d9d02ce1da2ae17d1

    Now passes with the new tests.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz62833.base
            new file:   baselines/ossfuzz62834.base
            new file:   baselines/ossfuzz62842.base

2023-09-30:  David Anderson
    commit 447cf938ed21b5c5edb77d9369ce27916b312df2

    New testcases
            new file:   ossfuzz62833/fuzz_set_frame_all-4521858130903040
            new file:   ossfuzz62834/fuzz_init_path-4573857635500032
            new file:   ossfuzz62842/fuzz_findfuncbypc-4964619766333440.fuzz

2023-09-29:  David Anderson
    commit 60a788e9e738d264086a0641cee2f610c255947d

    Now with tests on a Mach-O universal binary.
            modified:   ChangeLog
            modified:   DWARFTEST.sh
            new file:   baselines/macuniv.base
            new file:   baselines/macuniv0.base
            new file:   baselines/macuniv1.base

    Updated baseline executable
            modified:   dwarfdump-x86_64-ubuntu.O

2023-09-26:  David Anderson
    commit 0d93247fcbef1dbe4ff19c15533d64e5d0578447

    The base (non-dSYM) executable.
    Also an Apple  universal binary.
            new file:   demo

2023-09-26:  David Anderson
    commit ff5ce6c3195acc4d57c972ea950c5b6e96608b64

    The dSYM objectts with DWARF.
    demo is a universal binary containing
    demo.0 and demo.1 (which were extracted
    from demo using dd)
            new file:   demo
            new file:   demo.0
            new file:   demo.1

2023-09-23:  David Anderson
    commit ceceb3b13dd2a15bb0aa477455b6306a3e6f3fa6

    Test case ossfuzz62547 is run now.
    DW202309-001
            modified:   DWARFTEST.sh

2023-09-23:  David Anderson
    commit f39b3ec7f8c3f10786389e667bff9b10887e385b

    A new vulnerability and its test case.
            new file:   baselines/ossfuzz62547.base
            new file:   ossfuzz62547/README
            new file:   ossfuzz62547/fuzz_stack_frame_access-5263709637050368

2023-09-11:  David Anderson
    commit ca027def2f26c2884c6111c6fda4502a320a3522

    Up to date with git log.
            modified:   ChangeLog

2023-09-11:  David Anderson
    commit 679534aa54360f41691f78f0e33bc1ea5ae0d841

    New baseline executables with new
    tests for corrupted DWARF. These
    pass clang 14 -fsanitize now.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-09-11:  David Anderson
    commit 1fde85d161fc8208cd9bfae28fdddff55922bf77

    Changes in testing for corrupted dwarf
    meant slightly different error messages.
    the changes due to issues found by
    clang 14 -fsanitize.
    Now updated.
            modified:   baselines/ossfuzz58026.base
            modified:   baselines/ossfuzz59478.base
            modified:   baselines/ossfuzz59517.base
            modified:   baselines/ossfuzz59519.base
            modified:   baselines/ossfuzz59595.base
            modified:   baselines/ossfuzz59699.base

2023-09-09:  David Anderson
    commit d80276f7cc20ade8a72f1d2acf37807a9c34816f

    Now works on MacosDarwin
            modified:   DWARFTEST.sh
    New basline executables.
            modified:   dwarfdump-macos.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-09-07:  David Anderson
    commit 98fa2a50d5c0e7adae798043910d9310404d5440

    A small change in a message forced this baseline
    update.
            modified:   baselines/frame1-2018.base

2023-09-07:  David Anderson
    commit 44db53e10d40f3ce221c1bf992946865f6d1da7a

    Ubuntu no longer makes 32bit linux releases,
    so we have no way to check such.
            deleted:    dwarfdump-i386-ubuntu.O

2023-08-29:  David Anderson
    commit fb0a8fa1d8372e36d60cfb0a00aae8c1ca230af4

    Removed early exit 1
    which was for quick testing of oss-fuzz
    detection of vulnerability.
            modified:   DWARFTEST.sh

2023-08-28:  David Anderson
    commit a358e3a2f995d486a7ae52aa4535222e555cc375

    ossfuzz found a new vulnerability. At line
    This is the testcase and correct output.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz59576.base
            new file:   ossfuzz59576/fuzz_set_frame_all-5867083595120640

2023-08-24:  David Anderson
    commit d9d4a0a7fd6631ceab4e4301b553385802df6668

    Does not really need to be in a dwarfdump run.
            new file:   rnglstodd/README
            new file:   rnglstodd/RUN
            new file:   rnglstodd/dwarf_test_versions_mix.elf

2023-08-24:  David Anderson
    commit d8043935435c8c1028abd88582a0c1646ccc536e

    Separated to readelferr at top level.
            deleted:    amd2023/readelferr/README
            deleted:    amd2023/readelferr/dwarf_v5ops.so.elf

2023-08-24:  David Anderson
    commit 079e4c086f80e35fa906bf7822449b5a84a9887f

    Testcase though libdwarf already handles ok.
            new file:   readelferr/README
            new file:   readelferr/dwarf_v5ops.so.elf
            new file:   readelferr/dwarf_v5ops.so.zip

2023-08-23:  David Anderson
    commit 4e75a6cbce11ad27a516a38a9ec5b58707087b8d

    dwarfdump/libdwarf do this ok.
            new file:   amd2023/readelferr/README
            new file:   amd2023/readelferr/dwarf_v5ops.so.elf

    now only running relocs if the object is ET_REL
    changes the error detected in this damaged elf object.
            modified:   baselines/ossfuzz59699.base

2023-08-15:  David Anderson
    commit d19222489a82d90103a1a3f53368e20eed5f03aa

    new baselines ok with UTF-8
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-08-15:  David Anderson
    commit 4a4f16d53716ad878f02031e85925aa7cbd41df4

    Testing default/ASCII/utf8

            modified:   DWARFTEST.sh

2023-08-14:  David Anderson
    commit 3e7fc4d19358e5e8abf6214a4188a58370ef4126

    Added  ASCIIONLY env var to arrange
    test that don't emit native utf-8, but
    emit uri-style in all cases.

    Changed flags to exectable
            modified:   DWARFTEST.sh

2023-08-14:  David Anderson
    commit 9caea9e6de3c5762c7d881dd5266a956336fc57c

    Has example of a specific DWARF5 line table
    header feature: a header file index referring
    directly to a line table header directory
    index 0.
            new file:   debugso20230811.debug

    For utf8 testing.
            new file:   utf8/README
            new file:   utf8/test
            new file:   utf8/test.c

2023-08-08:  David Anderson
    commit 8bf828722e7bb47c9e8b804f3e270e5ceeabc915

    Added commentary about how the
    target_link_library command is coded to link with
    libdwarf.
            modified:   CmakeTest/cmaketest/CMakeLists.txt

2023-08-08:  David Anderson
    commit c54bc5a2ec10884b265def26960041169a220d10

    Now shows executing the test program.
            modified:   CmakeTest/README

2023-08-08:  David Anderson
    commit b38f073881fd14b78fe31d85925de5b39a38998c

    Refined the test code to print a more detailed
    comment when executed.
            modified:   CmakeTest/test.c

2023-08-08:  David Anderson
    commit 6a730b4f092c5c42fc0c63bade6cf9f8394aa4f7

    Updated with latest from git log.
            modified:   ChangeLog

2023-08-08:  David Anderson
    commit 71ed67824e7cd36759eb0a9172797cc8da6a9d88

    Refined and corrected the comments.
            modified:   CmakeTest/README

2023-08-08:  David Anderson
    commit 62ae0db59978be581177d7fd2cf214a5386c7f55

    Removing references to libelf.
            modified:   config.h.in
            modified:   test-eh/Makefile

2023-08-08:  David Anderson
    commit 5a8229b3c2dedf8134ab58b87d24130b90559739

    A tiny working testcase using cmake FetchContent
            modified:   CmakeTest/CLEAN
            modified:   CmakeTest/README
            modified:   CmakeTest/cmaketest/CMakeLists.txt
            new file:   CmakeTest/test.c

2023-08-07:  David Anderson
    commit ac417950183f8077e9e8a5bc2df12bb30f234f65

    A new test of the cmake FetchContent module.
    Only run by hand see CmakeTest/README

            new file:   CmakeTest/CLEAN
            new file:   CmakeTest/README
            new file:   CmakeTest/cmaketest/CMakeLists.txt

2023-07-20:  David Anderson
    commit 211ff2f5ccf4eee21381e9ab946a97dfea43fc19

    A simplification/correction in print_die.c
    lead to a slight difference in appearance:
    printing 4 or 8 instead of 0x00000004 or 0x00000008
    for a certain attribute.
            modified:   baddie1/incorrectatchild.base
            modified:   baddie1/incorrectatitself.base
            modified:   baddie1/incorrectbeforechild.base
            modified:   baddie1/incorrectbeforeitself.base
            modified:   baddie1/incorrectdies.base
            modified:   baddie1/incorrectnest.base
            modified:   baddie1/incorrectnest2.base
            modified:   debugfission/archivedwo-iMvvv.base.gz
            modified:   debugfission/archivedwo.base.gz
            modified:   debugfission/targetdwo.base.gz
            modified:   dwgena/test1.base.gz
            modified:   dwgena/test2.base.gz
            modified:   dwgena/test3.base.gz
            modified:   dwgena/test4.base.gz
            modified:   dwgena/test5.base.gz
            modified:   dwgena/test6.base.gz
            modified:   dwgena/test7.base.gz
            modified:   dwgena/test8.base.gz
            modified:   dwgena/test9.base.gz
            modified:   dwgenc/base.debugnames
            modified:   implicitconst/implicit.base
            modified:   mustacchi/m32out.base
            modified:   mustacchi/m64out.base
            modified:   nolibelf/test1.base

    Improving the 'how to update' that appears
    if tests fail.
            modified:   debugfission/runtest.sh
            modified:   baddie1/runtest.sh

2023-07-12:  David Anderson
    commit 8640f0f99d55d53166605c9625829ee2d8b3bff2

    New baseline needed to match the
    dwarfdump print_die.c changes
    in libdwarf commit 9ba4501eff0e21422b3986f36d6d8b7df43ad911
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-07-11:  David Anderson
    commit 119b9aea6284be93f5d982e28a1352323a491aa0

    The fix for DW202307-001 changed output
    of dwarfdump for a couple of defective
    objects. So we need to update the baseline
    executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-07-11:  David Anderson
    commit cf1587964ee42249231a4bd862fa9d6ebb015d1f

    A new test.  For ossfuzz id: 60506  Vulnerability  DW202307-001
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz60506.base
            new file:   ossfuzz60506/fuzz_srcfiles-6494439909228544.fuzz

2023-06-29:  David Anderson
    commit 43e84657762d05f818798e858a2aab93553c9b93

    Removing all trace of libelf, libelf.h,
    and elf.
            modified:   DWARFTEST.sh
            modified:   PICKUPBIN.sh
            modified:   README.md
            modified:   RUNALL.sh
            modified:   configure.ac
            modified:   err_allocate/runtest.sh
            modified:   findcu/runtest.sh
            modified:   frame1/runtest.sh
            modified:   legendre/runtest.sh
            modified:   navarro/runtest.sh
            modified:   nolibelf/runtest.sh
            modified:   test-alex1/runtest.sh
            modified:   test-alex2/runtest.sh
            modified:   test_setframe.c
            modified:   testoffdie/runtest.sh

2023-06-29:  David Anderson
    commit ee5ea3fb7249220e3d6936be3f29d778ed8c1d86

    dwarfgen text output changed.
    this is the only place we check that, the wording not
    really a purpose of the test.
            modified:   implicitconst/dgout.base

2023-06-26:  David Anderson
    commit 9d79eb5e34aa2319c85831acd14556637372c77e

    New fuzzed object tested DW202306-011.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz60090.base

2023-06-26:  David Anderson
    commit 14c441cccec80d8a7e9d897fa6a966cbee7681be

            new file:   ossfuzz60090/fuzz_set_frame_all-5757752673435648

2023-06-19:  David Anderson
    commit 4821fc7482301b634a9c0a92708214835e79e374

    Now with ossfuzz 59950 tested and passing.
            modified:   DWARFTEST.sh

    Just changed a comment.
            modified:   PICKUPBIN.sh

2023-06-19:  David Anderson
    commit 1d32ef2d89ba0f23969c480861f68b2419a5e77e

            new file:   baselines/ossfuzz59699.base
            new file:   baselines/ossfuzz59775.base
            new file:   baselines/ossfuzz59950.base
            new file:   ossfuzz59950/fuzz_set_frame_all-6613067367317504

2023-06-13:  David Anderson
    commit 341871d816b266874f795104a363a3256d92baf7

    Now with latest vulnerabilities fixed.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-06-13:  David Anderson
    commit cc274c2ab9875c8deadbabfbebc4c8979b73faa1

    New tests for vulnerabilities with fuzzed object files.
            modified:   DWARFTEST.sh

2023-06-11:  David Anderson
    commit 53fe674e62f37f24b5bab834775a3bdb1bf63329

    New vulnerability
            new file:   ossfuzz59775/fuzz_die_cu_attrs_loclist-4504718844755968

2023-06-10:  David Anderson
    commit 41f465e28910b7a0375408c588c9c91a800ea622

    New test case
            new file:   ossfuzz59699/fuzz_stack_frame_access-6523659305746432

2023-06-10:  David Anderson
    commit 8ca5d213e0cef0ede95e5aebc23c8ed8b7b0102b

    testcases
            new file:   ../baselines/ossfuzz59595.base
            new file:   ../baselines/ossfuzz59602.base
            new file:   ../ossfuzz59595/fuzz_set_frame_all-5319697747542016
            new file:   ../ossfuzz59602/fuzz_die_cu_attrs_loclist-6737086749999104

2023-06-10:  David Anderson
    commit 58424b5256b9852d6620af199885bd23a3ad7637

    New test for oss fuzz 59519
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz59519.base
            new file:   ossfuzz59519/fuzz_set_frame_all-4670829255065600

2023-06-09:  David Anderson
    commit e27f6ab9e9ab4186cfca87a2226cf873f04f6a8f

    Up to date with git log.
            modified:   ChangeLog

2023-06-09:  David Anderson
    commit 566f24873540e791a9378f9608b4fd40c704f19c

    Updated Frame code and a new test and an improved
    message.
    So new baselines.
            modified:   DWARFTEST.sh
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-06-09:  David Anderson
    commit 186c82c2268caeffbc6850196511d05deb953f6e

    Noted fix version (0.7.0)
            modified:   shinibufa/README

2023-06-09:  David Anderson
    commit f9794e8baa73296ac2d68b5022683e87d57a48a1

    Fixing mis-spelling in a printf.
            modified:   test_setframe.c

2023-06-09:  David Anderson
    commit 2ba2b0fe5bffe0f3c1e0b6012e82c35d6d335de9

    New vulnerability.  DW202306-003
            new file:   shinibufa/README
            new file:   shinibufa/fuzzed_input_file

2023-06-08:  David Anderson
    commit 8eefc41fe4c8277f983891bf324ff973992a81b7

    Fixing DW202306-001 oss fuzz 59517
    resulted  in a small change in dwarfdump
    output for a corrupt object.
    And ossfuzz59517.base is changed more
    substantially due to its corrupt data.
            modified:   baselines/ossfuzz59517.base
    New dwarfdump baseline.
            modified:   dwarfdump-x86_64-ubuntu.O

2023-06-04:  David Anderson
    commit b31fa4b4075557bd21831d4ae6b52a80607a93cd

    A correction of a line in fuzz/fuzz_set_frame_all.c
    where the printf lacked an ending newline resulted
    in a small change for this baseline.
            modified:   baselines/ossfuzz58026.base

2023-06-04:  David Anderson
    commit d6c5687571247f1f315e535e26b0075f6f69b97a

    Adding a new test. DW202306-001 ossfuzz id: 59517
    The corrupted object has an erroneous large frame offset.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz59517.base
            new file:   ossfuzz59517/fuzz_set_frame_all-5741671019839488

2023-05-31:  David Anderson
    commit 88960f379250064914806704feb35ca46d5736b2

    Now we run ossfuzz59478.
            modified:   DWARFTEST.sh

    New tests, baselines.
            new file:   baselines/ossfuzz56451.base
            new file:   baselines/ossfuzz59478.base
            new file:   ossfuzz56451/fuzz_dnames-4986494365597696
            new file:   ossfuzz59478/fuzz_set_frame_all-5300774457180160

2023-05-30:  David Anderson
    commit 5e3d39469ed688eb77d3b652df7d9231f1d777dc

    Added two new tests and the env var
    SINGLEONLY=y
    tells DWARFTEST.sh to skip runtest commands.
            modified:   DWARFTEST.sh
            modified:   baselines/ossfuzz56462.base
            modified:   baselines/ossfuzz58026.base

2023-05-23:  David Anderson
    commit ea85b10c7b578273de5e8a19ecdc2f8ee29ad1e2

    New tests, new baselines.
            modified:   DWARFTEST.sh
            modified:   baselines/ossfuzz56462.base
            new file:   baselines/ossfuzz56492.base
            new file:   ossfuzz56492/fuzz_macro_dwarf5-6497277180248064

2023-05-23:  David Anderson
    commit 6a9f597e6662549778bf60922b8b6796e0212724

    New testcases and updates to tests run.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56472.base
            new file:   baselines/ossfuzz56474.base
            new file:   ossfuzz56472/fuzz_simplereader_tu-6614412934119424
            new file:   ossfuzz56474/fuzz_die_cu_attrs_loclist-4719938125561856

2023-05-23:  David Anderson
    commit 5826bd620a4b73f934307291d8086f6289283fe4

    Two new testcases run.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56446.base
            new file:   baselines/ossfuzz56462.base
            new file:   ossfuzz56462/fuzz_set_frame_all-5424385441005568

2023-05-23:  David Anderson
    commit 035aa9dcdfb160b318fbec6badf89d4c8d1fd564

    New testcase.
            new file:   ossfuzz56446/fuzz_dnames-4784811358420992

    Removed unwanted call, added comment.
            modified:   test_setframe.c

2023-05-22:  David Anderson
    commit 37f5b932eb5d18cc562bb71d62660100fe871a88

    Now with latest from git log.
    Now with a test of invalide
    frame register settings.
    The settings were previously not tested for
    the required consistency.
    Things like dwarf_set_frame_rule_initial_value()
    dwarf_set_frame_rule_table_size().
            modified:   ChangeLog

2023-05-22:  David Anderson
    commit 8aa37052f15de5b9e7010ac45128dcc81d4b0ced

    Now with a new test, setting up improper
    frame register values and verifying these
    are caught.
    Testing DW202305-003 ossfuzz id: 59091
    by supplying invalid values in test_setframe.c.
            modified:   DWARFTEST.sh
            new file:   baselines/test_setframe.base
            new file:   test_setframe.c

2023-05-21:  David Anderson
    commit 29fe2b0f25cad2e7d44a292692ebba460b63f639

    These have not been used for months.
    The fuzz_ sources are now in libdwarf-code/fuzz.
            deleted:    fuzz_crc_32.c
            deleted:    fuzz_debug_addr_access.c
            deleted:    fuzz_die_cu_attrs.c
            deleted:    fuzz_die_cu_offset.c
            deleted:    fuzz_findfuncbypc.c
            deleted:    fuzz_gdbindex.c
            deleted:    fuzz_globals.c
            deleted:    fuzz_gnu_index.c
            deleted:    fuzz_macro_dwarf5.c
            deleted:    fuzz_rng.c
            deleted:    fuzz_set_frame_all.c
            deleted:    fuzz_srcfiles.c
            deleted:    fuzz_str_offsets.c

2023-05-19:  David Anderson
    commit a03e7502cf21ae65e15acd9ebb81debf709f0e51

    Now runs the test for ossfuzz59091
            modified:   DWARFTEST.sh
    Now with baseline for the new test.
            new file:   baselines/ossfuzz59091.base

2023-05-19:  David Anderson
    commit 682774409d227fe031aa2025edc889f4d1228720

    New issue.
            new file:   ossfuzz59091/fuzz_macro_dwarf5-5135813562990592

2023-05-10:  David Anderson
    commit a1b2dc9412221544c6df84e45bdfa09b9b300513

    Baseline for the new testcase
            new file:   baselines/ossfuzz58797.base

2023-05-10:  David Anderson
    commit 96d20f4f2be5c004e9b019a5594651aa0339ee30

    Adds a test. DW202305-002 ossfuzz 58797
            modified:   DWARFTEST.sh
            new file:   ossfuzz58797/fuzz_macro_dwarf5-4872686367801344

2023-05-09:  David Anderson
    commit 8548ede88160de5d69bf075657fb7b9bd8187f1f

    New: regression result timing for Apple M2
            modified:   RegressionTestsResults.ods

2023-05-09:  David Anderson
    commit 6a022eebb9cc856b065ca392672b6774726161cf

    Now we avoid running test_harmless on macOS as its
    dwarf_init_b() has no way to find dSYM
    (unlike dwarf_init_path).
            modified:   DWARFTEST.sh

2023-05-09:  David Anderson
    commit 948153534554cbac83d2dbf03273d710bfa47fec

    Fixed the code determining if dwargen should be built.
    Problem show by macOS testing.
            modified:   PICKUPBIN.sh

2023-05-09:  David Anderson
    commit 278dae454ac1139e45605783ea41a106f3caa0b8

    baseline executable for macOS. this generated
    for a new M2 machine.
            modified:   dwarfdump-macos.O

2023-05-09:  David Anderson
    commit 0de661f8254721953b72e9c3c9486bc1b8feaadf

    These were doing return where only exit was
    legal.  The error noticed by bash on macOS.
            modified:   guilfanov/runtest.sh
            modified:   guilfanov2/runtest.sh

2023-05-09:  David Anderson
    commit 14e043ede5015d24e5cef368eea991a1d6561ff8

    Updated baseline
            modified:   baselines/ossfuzz58769.base

2023-05-09:  David Anderson
    commit 7d0f2fa6eeb976bbc459735fea7d77317d328b3a

    New baseline
            new file:   baselines/ossfuzz58769.base

    Change dwarf_init_path() to include path buffer
    so that macOS dSYM dwarf data can be found.
            modified:   test_arange.c
            modified:   test_sectionnames.c
            modified:   test_simple_libfuncs.c

2023-05-09:  David Anderson
    commit 339f1ed71525ef10c0e24015c964c06fbf7ad0e4

    New ossfuzz failure today, 9 March 2023.
            new file:   ossfuzz58769/README
            new file:   ossfuzz58769/fuzz_macro_dwarf5-5460713058205696

2023-05-03:  David Anderson
    commit 7010bc5bc273eed0a7491ee9d0dd7d40ff099b9c

    New baselines due to added DWARF_CHECKs
    and fix for problem with groups in sections
    we do not care about. See debugfission README
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-05-02:  David Anderson
    commit 5067e52384955bf0b639707c869fd3d1c4e2c764

    Now with a test of debugfission/mungegroup.o
            modified:   DWARFTEST.sh

    Explains what mungegroup.o is and how created.
            modified:   debugfission/README

    New object file binary-edited so it is
    a test of the new code allowing overuse
    of non-dwarf sections in .group sections.
            new file:   debugfission/mungegroup.o

    New baseline executable.
            modified:   dwarfdump-x86_64-ubuntu.O

2023-04-25:  David Anderson
    commit d63b2d8ce463b839e605fb5f1e583731528c8358

    New baselines to reflect earlier detection
    of certain corrupted Elf headers.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-04-25:  David Anderson
    commit a0e30e0daefc7223e619cb96e9e5e18723af2540

    Changes in error output due to earlier
    detection of corrupt elf object.
            modified:   baselines/fuzz40624.base
            modified:   baselines/fuzz40802b.base
            modified:   baselines/fuzz54724.base
            modified:   baselines/fuzzpath40624.base
            modified:   baselines/fuzzpath40802b.base
            modified:   baselines/fuzzpath54724.base

2023-04-24:  David Anderson
    commit 8e7e9aadec27cc42a0d288bf114e4e5d22b008a3

    Now up to date with ChangeLog
            modified:   ChangeLog

2023-04-24:  David Anderson
    commit b5f0ff56bcd6514f9fc7c6cda5dc78d8bdfe9b32

    New baseline executables. Revisions handling
    extended dwarf meant an error message changed
    for three tests.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-04-24:  David Anderson
    commit 463549866617353aa6fa1bea26a86ed7043108f1

    Just adding clarifying comments.
            modified:   DWARFTEST.sh
            modified:   elfextend/README

2023-04-15:  David Anderson
    commit 8076f6b65a0349b9567a963c74fe5bf8107432e4

    Added the test for ossfuzz58026
            modified:   DWARFTEST.sh

    trivial change to baseline.
            modified:   baselines/ossfuzz58026.base

2023-04-15:  David Anderson
    commit 4f2e033300f9e2e059f8e0ce221b90ba0d30ace0

    New test case and new baseline.
            new file:   baselines/ossfuzz58026.base
            new file:   ossfuzz58026/fuzz_set_frame_all-4582976972521472.fuzz

2023-04-11:  David Anderson
    commit 343871334c334601c91a4a53d3d61dfd48fcd611

    Lots of data from git log
            modified:   ChangeLog

2023-04-11:  David Anderson
    commit cf3d7451f2e58b72d894f98a47ccd4d30dd71e61

    Now with latest baselines and new test.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz57766.base
            new file:   baselines/ossfuzz57887.base
            new file:   ossfuzz57887/fuzz_die_cu-4866423964172288

2023-04-09:  David Anderson
    commit 5e4b3a10910cb7d3088c91e1f79a0fbdbb3c5fc6

    Added test for  DW202304-002 oss fuzz  57766
            modified:   DWARFTEST.sh

2023-04-08:  David Anderson
    commit 47f55094f18b81586cfa9c2a56aeb7d4d7d44626

    New testcase, fuzzed.
            new file:   ossfuzz57766/fuzz_die_cu_print-5295062170075136

2023-04-07:  David Anderson
    commit fbfa3c8291852b627229512f6da927df8d0bfb25

    Update baseline executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-04-07:  David Anderson
    commit a627108904368453f43992aec188d7d5a6f9b814

    In freebsd there is no longer a /bin/sh
    automatically. So now we do
    /usr/bin/env bash
    /usr/bin/env sh
    so things work ok on ubuntu and freebsd.

            modified:   CHECKIFRUNNING.sh
            modified:   CLEANUP.sh
            modified:   DWARFTEST.sh
            modified:   LOOKFOR.sh
            modified:   PICKUPBIN.sh
            modified:   RUNALL.sh

2023-04-07:  David Anderson
    commit 116218c9f02328faa369dd88f66fd2e6d1d5f956

    Horribly botch in line 1...fixed
            modified:   DWARFTEST.sh

2023-04-07:  David Anderson
    commit 04807bb8d1212fa0ece87407558be78be288ed26

    Test all four flavors of elfextend.
            modified:   DWARFTEST.sh
            new file:   elfextend/README
            new file:   elfextend/testobj64gnu.extend
            new file:   elfextend/testobjgnu.extend

2023-04-06:  David Anderson
    commit 81b93f67c37ee42301263d7fec0e6be8ec716ff1

    A few improvements in messages required
    new baseline executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-04-06:  David Anderson
    commit 633189d5988dc81e557aa6f6e5ac4e5819195c22

    Now tests the oss fuzz 57711 problem.
            modified:   DWARFTEST.sh
    New testcase baseline.
            new file:   baselines/ossfuzz57711.base

2023-04-05:  David Anderson
    commit 5fd71fd84e5ce6b3a8af5fef20919cbe28c1a375

    Added tests of the elfextend objects
    which show tests of an ELF feature
    allowing a 32bit section count.
    On linux 'man 5 elf' will have the details
    in the text.
            modified:   DWARFTEST.sh

2023-04-05:  David Anderson
    commit 5812eef79880949dd2a8bbe8fb42a08f1d60ba52

    corrected baselines - due to minor change in
    some error message production
            modified:   baselines/ossfuzz57149.base
            modified:   baselines/ossfuzz57335.base
            modified:   baselines/ossfuzz57429.base
            modified:   baselines/ossfuzz57442.base
            modified:   baselines/ossfuzz57463.base
            modified:   baselines/ossfuzz57485.base
            modified:   baselines/ossfuzz57516.base

            new file:   ossfuzz57562/fuzz_findfuncbypc-6681114772373504
            new file:   ossfuzz57711/fuzz_srcfiles-4695324781576192

2023-04-04:  David Anderson
    commit 8b508b84782aa2e37cc8176c3c3a45d35dcac534

    New object using the Elf extension mechanism to allow
    32bit for number of sections and 32bit for the number
    of the section strings section.
            new file:   elfextend/testobj.extend
            new file:   elfextend/testobj64.extend

2023-04-01:  David Anderson
    commit 0dd078bfbfe5821845830d1545d185529e5fd6fd

    New tests.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz57516.base
            new file:   baselines/ossfuzz57527.base
            new file:   baselines/ossfuzz57562.base
            new file:   ossfuzz57527/fuzz_srcfiles-4599045397282816

2023-03-29:  David Anderson
    commit b84322fca8d14511b8e07436ce786f9574471588

    Now we have this new baseline.
    All the latest baseline dwarfdump really had
    only one difference. Due to improvements
    in checking .debug_rnglists for corrupted data.
            modified:   dwarfdump-s390.O

2023-03-29:  David Anderson
    commit a37189ea410475005fc80491ab9385ea2b3a5e80

            new file:   ossfuzz57516/fuzz_die_cu_attrs-6171488289161216

    Now testing the new file testcase.
            modified:   DWARFTEST.sh

    New baseline executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-03-28:  David Anderson
    commit 3027eb90f178db2e99de3947d42faf5fc1756d72

    Now testing all known bugs/vulnerabilities and
    all fixed.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz57443.base
            new file:   baselines/ossfuzz57463.base
            new file:   baselines/ossfuzz57485.base
            new file:   ossfuzz57443/fuzz_srcfiles-6015429578719232
            new file:   ossfuzz57463/fuzz_die_cu_attrs-5158380196200448
            new file:   ossfuzz57485/fuzz_die_cu_attrs-6025735319191552

2023-03-28:  David Anderson
    commit 91837a67e378a03de97b2df9e38722ca56b2c633

    with latest tests ossfuzz
            modified:   DWARFTEST.sh

2023-03-28:  David Anderson
    commit ded20dd201b9eb6746802859ba323b25121618fe

    baselines and test cases
            new file:   baselines/ossfuzz57429.base
            new file:   baselines/ossfuzz57437.base
            new file:   baselines/ossfuzz57442.base
            new file:   ossfuzz57437/fuzz_srcfiles-5281689109921792
            new file:   ossfuzz57442/fuzz_rng-5974595378479104

2023-03-28:  David Anderson
    commit 6c740bcf23e154d48b14b4f0617370cf02e9810b

    Forgot to update the baseline before.
    This is where the "DIE context address size of 4"
    repeated ad nauseum but now stop after one such NOTE:
            modified:   baddie1/incorrectdies.base

2023-03-27:  David Anderson
    commit e7380edd46aee822c68a99fca07c4f787cb03f7e

    New baseline executables.
    Three 'runsingle' do not match from 386-frebsd to the
    others, but that is not related to the executables here anyway.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-03-27:  David Anderson
    commit d1fa19e223129ad61199d29ba908d8715bbae240

    The runtest... on ossfuzz56906 failed because
    I made a mistake using full path to the test object
    on the runtest line.
    Fixed
            modified:   DWARFTEST.sh

2023-03-27:  David Anderson
    commit 988648667f0bc6d2698718557edcae1a774b54ae

    Now dealing better with stderr (though it
    was checked all along) and the runtest() code
    is easier to understand as well as being
    slightly faster shell code.
            modified:   DWARFTEST.sh

2023-03-27:  David Anderson
    commit 3d0bdc2ab1014a8983cef742eb13c877b908a9e6

    Now with new tests, and showing line counts.
            modified:   DWARFTEST.sh
            modified:   baselines/choi014.base
            modified:   baselines/ossfuzz57300.base
            new file:   baselines/ossfuzz57408.base
            new file:   ossfuzz57429/fuzz_die_cu_attrs-4845537731149824

2023-03-26:  David Anderson
    commit 0e369c290a87d0ed69b92219e3897c557b4adb51

    Slightly changed output.
            modified:   baselines/choi013.base
            modified:   choi012/README

    New.
            new file:   baselines/choi015a.base
            new file:   baselines/choi015b.base
            new file:   ossfuzz57408/fuzz_die_cu-4702098356043776

2023-03-26:  David Anderson
    commit 4ee6bcf7edcc5c3a212b2bcb619bd92eb869eee0

    New testcases
            new file:   choi015/poc_file_03
            new file:   choi015/poc_file_04

2023-03-26:  David Anderson
    commit 40d24287964b252fffd82f7d387f6d3231ea6640

    New test cases and baselines
            modified:   baselines/choi010.base
            new file:   baselines/choi012-10.base
            new file:   baselines/choi012.base
            new file:   baselines/choi012.base06
            new file:   baselines/choi012.base07
            new file:   baselines/choi012.base08
            new file:   baselines/choi013.base
            new file:   baselines/choi014.base
            new file:   choi012/README
            new file:   choi012/poc_file_06
            new file:   choi012/poc_file_07
            new file:   choi012/poc_file_08
            new file:   choi012/poc_file_10
            new file:   choi014/command.sh

2023-03-25:  David Anderson
    commit d4b62a3c5d62a10597886905762facdab13d94d5

    New test. Passing DW202303-040
            new file:   baselines/choi011.base
            new file:   choi011/README

2023-03-25:  David Anderson
    commit d6e35e33519a4cf4eb89151a00ba33fcbb9f50ed

    New test. of Dwarfdump.
            new file:   baselines/choi010.base
            new file:   choi010/poc_file

2023-03-24:  David Anderson
    commit 89c5ab4468102d78978ae8679dda00e0a22eea74

    New, and last libdwarf vulnerability. So far.
            new file:   baselines/ossfuzz57335.base
            modified:   dwarfdump-x86_64-ubuntu.O

2023-03-24:  David Anderson
    commit bfc3c5127410a7eacc5f7a88934dea6113bb8073

    removed trial exit 1
            modified:   DWARFTEST.sh
    The test for 57335 oss fuzz
            new file:   ossfuzz57335/fuzz_die_cu_attrs-6235345560928256.fuzz

2023-03-24:  David Anderson
    commit 015d34f24b91a7e22a0bb24cce1a12efb9ca0daa

    New testcase. Passing.
            new file:   baselines/ossfuzz57300.base

2023-03-24:  David Anderson
    commit 755bd289ab7f3234caa1018e1a17cadffb088b83

    Runs all latest
            modified:   DWARFTEST.sh
    Results from having two different tests of 56487
            modified:   baselines/ossfuzz56487.base

    New test
            new file:   ossfuzz57300/fuzz_die_cu-4752724662288384

2023-03-24:  David Anderson
    commit d59f4e2ac0385d04a6e898324469f0b40134693a

    Testcase checkin.
            new file:   ossfuzz57193/fuzz_die_cu_offset-5215024489824256

2023-03-24:  David Anderson
    commit 5c5476e4806793f26b5d75d36f10bccf5fc712d9

    New testcases added.
    In some cases were running the wrong fuzz*.c app
    on a test object, so now we add runs of the
    correct app for each testcase (keeping the accidental
    runs).
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56480dcp.base
            new file:   baselines/ossfuzz56487.base
            new file:   baselines/ossfuzz56487w.base
            modified:   baselines/ossfuzz56807.base
            new file:   baselines/ossfuzz56895.base
            new file:   baselines/ossfuzz56895mac.base
            modified:   baselines/ossfuzz57027.base
            new file:   baselines/ossfuzz57149.base
            new file:   baselines/ossfuzz57193.base
            new file:   baselines/ossfuzz57292.base
            new file:   ossfuzz56895/fuzz_macro_dwarf5-5080340952907776
            new file:   ossfuzz57292/fuzz_die_cu_print-5412313393135616

2023-03-24:  David Anderson
    commit ed8f3008b0b5b1537441bfe4f9a34f0213af77b6

    This has an exit early in the file.
    To be removed shortly.
            modified:   DWARFTEST.sh

2023-03-24:  David Anderson
    commit 91c7b34ef7c56b839af6a51406d09d28f1303abc

    Working toward a complete set of ossfuzz tests
            new file:   baselines/ossfuzz56480.base
            new file:   baselines/ossfuzz57048.base
            new file:   baselines/ossfuzz57107.base
            new file:   ossfuzz56480/fuzz_die_cu_print-5264022485467136
            new file:   ossfuzz56487/clusterfuzz-testcase-fuzz_rng-6655451078197248
            new file:   ossfuzz57048/fuzz_findfuncbypc-4647942385696768
            new file:   ossfuzz57107/fuzz_die_cu_attrs_loclist-4991396240293888
            new file:   ossfuzz57149/fuzz_srcfiles-6213793811398656

2023-03-22:  David Anderson
    commit 89aba7e067562c239515f5473f587ace23c8764a

    Added removal of local fuzz_*.o object files,
    these never need to be kept.
            modified:   CLEANUP.sh

2023-03-22:  David Anderson
    commit d7317cfc2f8e15e1b429a79b7e59073b2b055d9f

    Now tests 56454, which was acknowledge as fixed by ossfuzz.
            modified:   DWARFTEST.sh

    These are new-ish and need to be in the repository.
            new file:   baselines/ossfuzz56454.base
            new file:   ossfuzz56454/fuzz_die_cu_offset-5171954224332800.fuzz
            new file:   ossfuzz56993/fuzz_macro_dwarf5-5770464300761088
            new file:   ossfuzz57027/fuzz_stack_frame_access-5123569972805632
            new file:   testbuildfuzz.c

2023-03-22:  David Anderson
    commit 25213ecb9c53f5b281d644b642ca875b7aa5e44f

    New test. Now passing.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz57027.base

2023-03-22:  David Anderson
    commit b6806868d403c7e5efb1b1954daa32bf0df625b4

    All these baselines seem good.
            modified:   baselines/ossfuzz56453.base
            modified:   baselines/ossfuzz56456.base
            modified:   baselines/ossfuzz56476.base
            modified:   baselines/ossfuzz56478.base
            modified:   baselines/ossfuzz56676.base
            modified:   baselines/ossfuzz56897.base
    The test main. Working.
            modified:   testbuildfuzz.sh

2023-03-22:  David Anderson
    commit 97d9778fa1ce78150ed697f13f70ab4a80e1cc38

    New baselines. Passing.
            new file:   baselines/ossfuzz56906.base
            new file:   baselines/ossfuzz56958.base
            new file:   baselines/ossfuzz56993.base

2023-03-20:  David Anderson
    commit 84d09d8a3bb3b785271134bfd82b1e2ac08cfa43

    Test cases
            new file:   ossfuzz56906/fuzz_rng-6031783801257984.fuzz
            new file:   ossfuzz56958/fuzz_stack_frame_access-6097292873826304
    For testing fuzz source compiles
            new file:   testbuildfuzz.sh

2023-03-18:  David Anderson
    commit 9bfc3db881d92450411b59b31cbe8aa404fa2dd3

    New test cases. These pass -fsanitize oss-fuzz.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56458.base
            new file:   baselines/ossfuzz56897.base
            modified:   fuzz_globals.c
            new file:   ossfuzz56897/fuzz_rng-5105415777288192

2023-03-18:  David Anderson
    commit 9e646264b4ae37ec3c4e750be0643646d3999756

    New tests, baselines, sourcefiles added for oss-fuzz
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56450.base
            new file:   baselines/ossfuzz56456.base
            modified:   baselines/ossfuzz56476.base
            new file:   baselines/ossfuzz56676.base
            new file:   baselines/ossfuzz56807.base
            modified:   fuzz_crc_32.c
            new file:   fuzz_gdbindex.c
            new file:   fuzz_globals.c
            modified:   fuzz_set_frame_all.c
            new file:   ossfuzz56458/fuzz_globals-5286908805906432

2023-03-09:  David Anderson
    commit c063df10722de9b9d752271050ede183b551a92f

    New
            new file:   ../baselines/ossfuzz56735.base
            new file:   fuzz_srcfiles-4626047380619264

2023-03-09:  David Anderson
    commit 187a4323d324d0e4316049a8b6f0059e3b3a18bd

    New testcases
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56453.base
            new file:   baselines/ossfuzz56476.base
            modified:   baselines/ossfuzz56478.base
            new file:   fuzz_macro_dwarf5.c
            new file:   fuzz_rng.c
            modified:   fuzz_srcfiles.c

2023-03-09:  David Anderson
    commit 7febc4c84f123fbfe0159c5587147dee8e561cb1

            new file:   ossfuzz56453/fuzz_debug_addr_access-5069447397507072

2023-03-09:  David Anderson
    commit e25a417c4c910a5a5c1db478e443ecfcc0196c09

    New tests.
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56478.base
            modified:   fuzz_srcfiles.c
            modified:   fuzz_str_offsets.c

2023-03-09:  David Anderson
    commit b6dde72c9cd3abd1b375a038662f36abf43b4d3b

    New testcases
            modified:   DWARFTEST.sh
            new file:   baselines/ossfuzz56460.base
            new file:   baselines/ossfuzz56489.base
            modified:   fuzz_die_cu_attrs.c
            modified:   fuzz_findfuncbypc.c

2023-03-09:  David Anderson
    commit df4b32fb0dcf59f8d1550d6cb71edde468c34607

    ossfuzz56489 testcase
            new file:   fuzz_srcfiles-5091530466787328

2023-03-09:  David Anderson
    commit 37f549653e8be21f0231506db0ac0b5364002a00

    New test src
            new file:   fuzz_srcfiles.c

2023-03-09:  David Anderson
    commit 47cb24802716309c383b8cf9dd466ad59d8727b9

    New testcases
            new file:   fuzz_gnu_index.c
            new file:   fuzz_set_frame_all.c
            new file:   fuzz_str_offsets.c
            new file:   ossfuzz56450/fuzz_die_cu_attrs-4953133005799424
            new file:   ossfuzz56460/fuzz_str_offsets-5376904040677376

2023-03-09:  David Anderson
    commit dfa3bfa24be133f98fce842928c5dfb1cfce87e0

    Corrections to original.
            modified:   fuzz_findfuncbypc.c
    Wrong name
            deleted:    ossfuzz65460/fuzz_str_offsets-5376904040677376

2023-03-09:  David Anderson
    commit 2547d77560d66bcb1c99bc647c67ebb296af128b

    New testcase
            new file:   fuzz_die_cu_attrs.c

2023-03-09:  David Anderson
    commit 010a461d0edf0a1a6bb9fd9e35ddd5d139bbc89f

    New test case: oss fuzz 665460
            new file:   fuzz_str_offsets-5376904040677376

2023-03-08:  David Anderson
    commit 275b86500f2d315e346de41d51d1d4f5f36390a1

    For new tests.
            new file:   baselines/ossfuzz56666.base
            new file:   ossfuzz56476/fuzz_rng-5008229349588992
            new file:   ossfuzz56478/fuzz_rng-5030515398017024

2023-03-07:  David Anderson
    commit 41fe73cd670bbee096f9ac469850442091f0d8e7

    New tests
            modified:   DWARFTEST.sh
    Updated baseline
            modified:   baselines/ossfuzz56636.base
    New baseline executable
            modified:   dwarfdump-x86_64-ubuntu.O
    Recording a usuful version
            modified:   scripts/findobjects

2023-03-06:  David Anderson
    commit 462e5d9913970f2892bc7ddd432cff94390911f4

    New test object.
            new file:   ossfuzz56735/fuzz_macro_dwarf5-6718585377783808

2023-03-06:  David Anderson
    commit 9c0ec993bb0a2bbd1ce5f415b80646295600dd4f

    New test object
    regressiontests/ossfuzz56456/
            new file:   fuzz_gdbindex-5240324382654464

2023-03-05:  David Anderson
    commit 5623931b3e94989fbc176f9831de910b2ad90ff2

    New test objects.
            new file:   fuzz_set_frame_all-5081006119190528.fuzz
            new file:   minimized-fuzz_set_frame_all-5081006119190528.fuzz

2023-03-04:  David Anderson
    commit 5a3343b47c778377a181cac692505a1ee88b17aa

    This was a type. Wrong file.
            deleted:    ossfuzz56666/fuzz_debug_addr_access-4801779658522624.fuzz

2023-03-04:  David Anderson
    commit c2e75182c7141cc2546e266daff9066da487903b

    The correct new fuzzed object.
            new file:   ossfuzz56666/fuzz_gnu_index-4803574417981440

2023-03-04:  David Anderson
    commit 48449d64fa2255692e78c1a67e963ac1be91340f

    New test object file.
            new file:   ossfuzz56666/fuzz_debug_addr_access-4801779658522624.fuzz

2023-03-03:  David Anderson
    commit f16511cd1dfef6983c32bcee8b10265b70f9d4c7

    Now correct baseline.
            modified:   baselines/ossfuzz56636.base

    New baseline executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

    Removing erroneous *errp
            modified:   fuzz_debug_addr_access.c

2023-03-03:  David Anderson
    commit ae886d5617dfc6545f638d410251ca3cda350b7c

    Now runs new tests.
            modified:   DWARFTEST.sh
    The source for the latest new test.
            new file:   fuzz_debug_addr_access.c

2023-03-03:  David Anderson
    commit 35870cf0df97d4423b551bd317087ea6d571b96d

    New oss-fuzz test cases.
            new file:   baselines/ossfuzz56548.base
            new file:   baselines/ossfuzz56636.base
            new file:   ossfuzz56636/fuzz_debug_addr_access-4801779658522624.fuzz

2023-03-03:  David Anderson
    commit 55a0623908721916888462aa514ce1fa41ce6dc2

    Now with latest test run. oss-fuzz  56548
            modified:   DWARFTEST.sh

2023-03-02:  David Anderson
    commit 0a0685d727001d9351748c8b22027b08da2421d8

    New test object oss fuzz 56548
            new file:   fuzz_findfuncbypc-5073632331431936

2023-03-02:  David Anderson
    commit 3ea61a85fefb483205c748c9947e20ce07465a9a

    Now with the tests mentioned just below.
            modified:   DWARFTEST.sh

    New baselines
            new file:   baselines/ossfuzz56443.base
            new file:   baselines/ossfuzz56530.base
    new test code reading DWARF.
            new file:   fuzz_crc_32.c
            new file:   fuzz_findfuncbypc.c

2023-03-02:  David Anderson
    commit d23b5232f329e05197025b4fe9fbc188ad10edfa

    Correct baseline now.
            modified:   baselines/ossfuzz56465.base

2023-03-02:  David Anderson
    commit 724a5a1233c4fadc45d4e602fb2bb33d3f01f42f

    Removing the unlink() calls, we do NOT want those
    here.
            modified:   fuzz_die_cu_offset.c

2023-03-02:  David Anderson
    commit e49650a20851ce0b87c241920432da4eee1ec04f

    New fuzz test.
            new file:   ossfuzz56443/fuzz_crc_32-4750941179215872

2023-03-02:  David Anderson
    commit 99ef8ac52ff994c907b85dde085e99cc7cf64070

    ossfuzz/56465/
            new file:   fuzz_die_cu_offset-5866690199289856

2023-03-02:  David Anderson
    commit 84aef601f5202af04287defebb88b1ae6c939efc

    Will get this back.
            deleted:    ossfuzz56465/fuzz_die_cu_offset-5866690199289856

2023-03-02:  David Anderson
    commit cc9f525bec9fd4c314b8fbe1a977b76f1efacf8c

    New testcase.
            new file:   fuzz_findfuncbypc-6272642689925120

2023-03-02:  David Anderson
    commit fe79c8c783f023083f3dbc5a10c5e4cdadba89ca

    Now testing object file in ossfuzz56465
            modified:   DWARFTEST.sh

2023-03-01:  David Anderson
    commit 7b3eccb498cf939d46db88f0797fd3ab2fcde277

    Correct object.
            new file:   ossfuzz56465/fuzz_die_cu_offset-5866690199289856
    Incorrect object.
            deleted:    ossfuzz56465/fuzz_init_path-6011554641870848

2023-03-01:  David Anderson
    commit cdc4e164ce548308ad9dbfcd33c6a1abb260d09f

    A new fuzzing issue holding spot
            new file:   baselines/ossfuzz56465.base
    The source to test with
            new file:   fuzz_die_cu_offset.c
    The binary to test.
            new file:   ossfuzz56465/fuzz_init_path-6011554641870848

2023-02-28:  David Anderson
    commit be9e191d0f910816368f6f285fa27ec9093777dd

    With latest timings.
            modified:   RegressionTestsResults.ods
    macro section output changed, so the baseline
    needed updating.
            modified:   baddie1/incorrectdies.base

    These are the latest baseline executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-02-27:  David Anderson
    commit a08cb685bad2ffb286edc71e7c1b14499a2a47eb

    Minor tweaks in researching problems
    (a script rarely used).
            modified:   scripts/findobjects

2023-02-27:  David Anderson
    commit b1e826e185b9b13e151e4b1b28b347f28ddc136c

            modified:   DWARFTEST.sh
    Modfied tests for better code coverage.

2023-02-27:  David Anderson
    commit b84ff0138f896835fee74173839ec38c00d9ab0d

    Updated the expected total so percent
    shows a bit better.
            modified:   python2/showpct.py
            modified:   python3/showpct.py

2023-02-27:  David Anderson
    commit 765f5fec40bec94358347839d1ceea6acd1d1c44

    Added a dwarf_finish() to avoid a leak.
            modified:   test_simple_libfuncs.c

2023-02-23:  David Anderson
    commit dd9c38b6ec4f47b934e679581d0dce80f71df855

    Update total number of tests so percent calculation
    is fairly close to right.
            modified:   python2/showpct.py
            modified:   python3/showpct.py

2023-02-23:  David Anderson
    commit 932df66f43778f7fbf6d4bf43afd3c9cfa9d5444

    These superceded by other test files. Not needed.
            deleted:    baselines/test_dnames_codes.base
            deleted:    test_dnames_codes.c

2023-02-23:  David Anderson
    commit 226222b62ef845805e932505b3d34ba599130af7

    Latest test version.
            modified:   DWARFTEST.sh

    One-shot tests. Ignore.
            modified:   RUNVAL

    These fixed minor indent error and the like.
            modified:   test_dwnames.c
            modified:   test_harmless.c

2023-02-23:  David Anderson
    commit cf38232eb466f2ab591751a2cfe6cf80b537f780

    This will be deleted shortly. Never completed.
            new file:   baselines/test_dnames_codes.base

    New tests of some simple libdwarf calls.
            new file:   baselines/test_simple_libfuncs.base
            modified:   test_simple_libfuncs.c

2023-02-21:  David Anderson
    commit e0171fa20db75401692baaf7f07132b8ac828208

    Cleaning up and fixing runsingle (which was not quite right).
            modified:   DWARFTEST.sh

    Added PASS output.
            modified:   test_dwnames.c

    minor tweaks.
            modified:   test_pubsreader.c
            modified:   test_sectionnames.c

2023-02-21:  David Anderson
    commit d8de24b0ca61f0181b08652a43675fba08280667

    New baseline and new test code.
            new file:   baselines/test_sectionnames.base
            new file:   test_dnames_codes.c
            new file:   test_simple_libfuncs.c

2023-02-21:  David Anderson
    commit 776c66fcd2c160ed70277720a098dfb3ec8a26ab

    Added comments.
            modified:   dwnames_checks/build_dwnames.sh
    Corrected the output C a little.
            modified:   dwnames_checks/build_dwnames_source.c

    Regenerated.
    Now this has an ending newline as it should.
            modified:   dwnames_checks/dwnames_all.c

2023-02-20:  David Anderson
    commit d3f9adfb7c4bdfd664f7f048768fe7a7e71f8ab4

    Up to date with git log
            modified:   ChangeLog

2023-02-20:  David Anderson
    The date is the 0.6.0  libdwarf release date.

2023-02-19:  David Anderson
    commit fb5aaca009f464949add8e269a6abfd6fe8f8fa8

    This way (.c no .h) works better with lcov gcov
            modified:   dwnames_checks/build_dwnames.sh
            modified:   dwnames_checks/build_dwnames_source.c
            modified:   dwnames_checks/dwnames_all.c
            deleted:    dwnames_checks/dwnames_all.h

2023-02-19:  David Anderson
    commit 36c4b9b55a7718b55ad382dff9b71b13e7efcfcd

    test and doc and baseline for the
    dwnames_all testcase.
            modified:   DWARFTEST.sh
            new file:   baselines/dwnames_all.base
            modified:   dwnames_checks/README

2023-02-19:  David Anderson
    commit b4f156062a51a6a767a7924c6a9f04e86ade7eec

            new file:   dwnames_checks/README
            new file:   dwnames_checks/build_dwnames.sh
    This generates test C source.
            new file:   dwnames_checks/build_dwnames_source.c

    These actually test dwarf_get_*_name with
    in-line code so lcov/gcov recognize the calls.
            new file:   dwnames_checks/dwnames_all.c
            new file:   dwnames_checks/dwnames_all.h

2023-02-17:  David Anderson
    commit 79f12c86edaca3b2cc8e15cbb95d7c4a8bbb0777

    For the dwdebuglink tests had to add
    extra sed commands so unwanted
    local path names are all replaced
    by ..std.. so pass in, hopefully all,
    places.
            modified:   DWARFTEST.sh

2023-02-17:  David Anderson
    commit 28e5480cee223c7b79b82d8146d019f6eab30a86

    Now the runsingle() test function ensures
    that any instance of the test-environment
    matches the test machine code-source-path
    those characters are replaced by ..std..
    so tests can pass on hopefully any machine.
            modified:   DWARFTEST.sh
            modified:   baselines/dwdebuglink-a.base
            modified:   baselines/dwdebuglink-b.base
            modified:   baselines/test_findfuncbypcb4.base
            modified:   baselines/test_findfuncbypcb5.base

2023-02-17:  David Anderson
    commit 8522850ace6fb03970095fb18320a639186d1a9d

    Now we have the runsingle tests set up
    and working for more complete coverage.
            modified:   DWARFTEST.sh
    Now this just does a compile, no running tests,
    runsingle does that.
            modified:   frame1/runtest.sh

2023-02-17:  David Anderson
    commit 46ab1525e49254fa25dbf187d4c557f851fbef15

    New baselines
    in
      baselines/
            new file:   dwdebuglink-a.base
            new file:   dwdebuglink-b.base
            new file:   frame1-2018.base
            new file:   frame1-2018s.base
            new file:   frame1-orig.base

2023-02-09:  David Anderson
    commit 3161e1cccd05c877e3c0cf9b31e20a55ce71a102

    Up to date with ChangeLog
            modified:   ChangeLog

2023-02-09:  David Anderson
    commit 5adf6465c182fae7a7d06f2d543066eb0cf0fbbf

    Doing better cleanup in checkargs() function
            modified:   BASEFUNCS.sh

2023-02-09:  David Anderson
    commit cf42df2bbb00c1583b5a7398ac64f246ad1ec5a6

    Corrected the argument handling of these.
    Was incorrectly changed to accomodate
    --suppress-de-alloc-tree (that is, to ignore
    that option when found).
            modified:   filelist/localfuzz_init_binary.c
            modified:   filelist/localfuzz_init_path.c

2023-02-07:  David Anderson
    commit 2126570d9916ee6ce44e55db4126165a5d9a7bd5

    Now with the correct full path to test objects (fuzz stuff).
            modified:   DWARFTEST.sh

    Changes to .c below mean new baseline values.
            modified:   baselines/fuzz201609.base
            modified:   baselines/fuzz201609b.base
            modified:   baselines/fuzz201690c.base
            modified:   baselines/fuzz40624.base
            modified:   baselines/fuzz40802.base
            modified:   baselines/fuzz40802b.base
            modified:   baselines/fuzz54724.base
            modified:   baselines/fuzzc-sun.base
            modified:   baselines/fuzzgoogle1.base
            modified:   baselines/fuzzgoogle1b.base
            modified:   baselines/fuzzguil.base
            modified:   baselines/fuzzkal.base
            modified:   baselines/fuzzmoy.base
            modified:   baselines/fuzzpath201609.base
            modified:   baselines/fuzzpath201609b.base
            modified:   baselines/fuzzpath201690c.base
            modified:   baselines/fuzzpath40624.base
            modified:   baselines/fuzzpath40802.base
            modified:   baselines/fuzzpath40802b.base
            modified:   baselines/fuzzpath54724.base
            modified:   baselines/fuzzpathc-sun.base
            modified:   baselines/fuzzpathgoogle1.base
            modified:   baselines/fuzzpathgoogle1b.base
            modified:   baselines/fuzzpathguil.base
            modified:   baselines/fuzzpathkal.base
            modified:   baselines/fuzzpathmoy.base

    Now with relevant short output as to what happened.
            modified:   filelist/localfuzz_init_binary.c
            modified:   filelist/localfuzz_init_path.c

2023-02-06:  David Anderson
    commit 6777721362df8fc92237a24ddcbacec35e88e731

    Extra cleanup added.
            modified:   CLEANUP.sh
    Moved runsingle tests a little.
            modified:   DWARFTEST.sh
    Correct baselines now.
            modified:   baselines/fuzzkal.base
            modified:   baselines/fuzzmoy.base
            modified:   baselines/fuzzpathkal.base

2023-02-06:  David Anderson
    commit 8afd144dc7537a80af21df26b69de8d79581d399

    the source is in filelist/
    though we no longer use filelist/runtest.c
            deleted:    fuzz_init_binary.c
            deleted:    fuzz_init_path.c

2023-02-06:  David Anderson
    commit 2389704117e24304efddec4c64bab58df0862264

            modified:   ../DWARFTEST.sh
            modified:   ../RUNVAL
            new file:   fuzz201609.base
            new file:   fuzz201609b.base
            new file:   fuzz201690c.base
            new file:   fuzz40624.base
            new file:   fuzz40802.base
            new file:   fuzz40802b.base
            new file:   fuzz54724.base
            new file:   fuzzc-sun.base
            new file:   fuzzgoogle1.base
            new file:   fuzzgoogle1b.base
            new file:   fuzzguil.base
            new file:   fuzzkal.base
            new file:   fuzzmoy.base
            new file:   fuzzpath201609.base
            new file:   fuzzpath201609b.base
            new file:   fuzzpath201690c.base
            new file:   fuzzpath40624.base
            new file:   fuzzpath40802.base
            new file:   fuzzpath40802b.base
            new file:   fuzzpath54724.base
            new file:   fuzzpathc-sun.base
            new file:   fuzzpathgoogle1.base
            new file:   fuzzpathgoogle1b.base
            new file:   fuzzpathguil.base
            new file:   fuzzpathkal.base
            new file:   fuzzpathmoy.base
            modified:   ../filelist/fileliste
            modified:   ../filelist/localfuzz_init_binary.c
            modified:   ../filelist/localfuzz_init_path.c
            new file:   ../fuzz_init_binary.c
            new file:   ../fuzz_init_path.c

2023-02-06:  David Anderson
    commit 89abc1a949cf1abaa73335091df4eadb2b35fc4d

    Removing all mention of lcov, such is
    not the way to help with lcov/gcov,
    a special build/test is required.
            modified:   DWARFTEST.sh

2023-02-06:  David Anderson
    commit 00cefdabb07be719a23441d5d1945a9597662a13

    New testcases.
            new file:   google1/crash-c7e04f405a39f3e92edb56c28180531b9b8211bd
            new file:   google1/crash-d8d1ea593642a46c57d50e6923bc02c1bbbec54d

2023-02-04:  David Anderson
    commit 034f6f0899d12385e5a3cdad255832502aa1d743

    A new baseline and a small change to
    test_harmless.c lets us use the test
    in other places (lcov) easily.
            modified:   DWARFTEST.sh
            new file:   baselines/test_harmlessc.base
            modified:   test_harmless.c

2023-02-04:  David Anderson
    commit eef8c7e2771d6bb070038791c6f8d06b1daad477

    Restored accidental delete of leading # character.
            modified:   PICKUPBIN.sh

2023-02-04:  David Anderson
    commit 1d04d2f136750c3e5d432b5e96dc1c80e65470f4

    Now has the checkargs() function, used in several
    places (the runtest.sh mentioned here) so that
    we can tailor the options presented to the compiler
    to what it will accept.  Doing it ourselves,
    as configure is not applicable these are test-runtime
    options choices like -fsanitize=leak.
            modified:   BASEFUNCS.sh

    The following now use checkargs() where
    appropriate.
            modified:   DWARFTEST.sh
            modified:   debuglink/runtest.sh
            modified:   enciso4/runtest.sh
            modified:   err_allocate/runtest.sh
            modified:   findcu/runtest.sh
            modified:   frame1/runtest.sh
            modified:   implicitconst/runtest.sh
            modified:   legendre/runtest.sh
            modified:   navarro/runtest.sh
            modified:   showsecgroupsdir/runtest.sh
            modified:   test-alex1/runtest.sh
            modified:   testoffdie/runtest.sh

2023-02-04:  David Anderson
    commit d9733d951f0e8bb3fcfbb53e9b4c43c7d77073ef

    This not used. Its final name, test_dwnames.c,
    is used.
            deleted:    test_dwarfnames.c

2023-01-31:  David Anderson
    commit 15f42c8ac9ad63a3aceb30c44fcddf7af4502fea

    Now does the proper
      dwarf_dealloc(dbg, offbuf, DW_DLA_UARRAY);
    after dwarf_offset_list()
            modified:   test_pubsreader.c

2023-01-31:  David Anderson
    commit e0a27de835a493f2d57ea2c5485d4709dc6fd04e

    The changes let this all access libzstd
    in /usr/local/lib (as seen on freebsd).
    Normal builds took care of this for us,
    but in the special compiles here
    we had to make an extra effort to
    compile and find libzstd (on freebsd).

            modified:   DWARFTEST.sh
            modified:   checkforlibz/runtest.sh
            modified:   checkforlibzstd/runtest.sh
            modified:   findcu/runtest.sh
            modified:   frame1/runtest.sh
            modified:   legendre/runtest.sh
            modified:   test-alex1/runtest.sh
            modified:   test-alex2/runtest.sh
            modified:   testoffdie/runtest.sh

2023-01-31:  David Anderson
    commit 87f8ea128913c577e92ab8135850f271272ab608

    New baseline executables.
    the i386 one has the fix to dwarf_offset_list().
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-x86_64-freebsd.O

2023-01-28:  David Anderson
    commit b714ab0d396fbe801d5fbde0a6dbbc2665bfb965

    Latest results.
            modified:   ../RegressionTestsResults.ods

    These updated to match latest libdwarf/dwarfdump.
            modified:   ../dwarfdump-s390.O
            modified:   ../dwarfdump-x86_64-ubuntu.O
    Updates to the FreeBSD baselines will be later.

2023-01-24:  David Anderson
    commit 3009ca977a89e75f5e45aca36257b1973d998979

    Now runs the test mentioned below.
            modified:   DWARFTEST.sh

    Now ignores the --dwarf-suppress-de-alloc-tree
    option if such is passed in, we have no reason
    to bother with that in this test source.
            modified:   bitoffset/test_bitoffset.c

    A new baseline required by the new test case.
            modified:   dwarfdump-x86_64-ubuntu.O

    A new test: the object file uses DW_FORM_strx3.
            new file:   kaufmann2/ct-bad.c
            new file:   kaufmann2/ct-bad.dw
            new file:   kaufmann2/ct-bad.o

2023-01-21:  David Anderson
    commit 5f1daf289790cf6a5fdc79c9bd6f9ffce16d52f5

    Up to date with git log now.
            modified:   ChangeLog

2023-01-21:  David Anderson
    commit 1825e06c8cacbdc4ba7ef8950f2e252025440a56

    Adding runsingle test_dwnames
            modified:   DWARFTEST.sh
    Baseline for the test
            new file:   baselines/test_dwnames.base
    The source running the test. Calls every
    valid dwarf_get_TAG_name and FORM and ... so on,
    currently 1157 calls.
            modified:   test_dwnames.c

2023-01-19:  David Anderson
    commit a64708fa5627b44488eb3a121747ddd327e7d33c

    Now with func pointer array.
    Still incomplete.
            modified:   test_dwnames.c

2023-01-19:  David Anderson
    commit e64c8d8bf32281ee7542b5ba270a868ac263b00b

    Not ready to use, but a step closer.
            modified:   test_dwnames.c

2023-01-18:  David Anderson
    commit 59b97c84283527ae8f4f3a6b2a5269acbbfd8b8d

    Just started new test .
            new file:   test_dwnames.c

2023-01-17:  David Anderson
    commit 71bf4624446e8c5f580684c3f29c458f82e48eb9

    Correcting handling of lcov issues.
            modified:   DWARFTEST.sh
    Updated with latest
            modified:   RegressionTestsResults.ods
    New baseline .
            new file:   baselines/test_bitoffseta.base

2023-01-16:  David Anderson
    commit 7afa71dc19d8391e415056b53b4069fc2645d7c1

    Moved some local test compilations earier
    here. Working toward better test coverage.
            modified:   DWARFTEST.sh

2023-01-15:  David Anderson
    commit 790b829c52101cb003988b7dc9c1ebb8a2173f23

    With latest from git log
            modified:   ChangeLog

2023-01-15:  David Anderson
    commit 9fa6f25c9f230489d73484f0af4728fcc6eabaa8

    Now with added tests
            modified:   DWARFTEST.sh

    Latest baseline executables.
            modified:   dwarfdump-i386-freebsd.O
            modified:   dwarfdump-s390.O
            modified:   dwarfdump-x86_64-freebsd.O
            modified:   dwarfdump-x86_64-ubuntu.O

2023-01-14:  David Anderson
    commit 14527ab496bd0cc90d2c5d71c64ba8c813202eba

    Now the baseline depends on fixed object files,
    not on what we compile in the tests.
            modified:   baselines/test_sectionnamesb.base

2023-01-14:  David Anderson
    commit 17a2144337b4375c3359576f99a0d8b2275a14ec

    Modify to match libdwarf codingstyle,
    removing trailing whitespace, following
    libdwarf rules for indent etc..
            modified:   test_arange.c
            modified:   test_dwarfnames.c
            modified:   test_harmless.c
            modified:   test_pubsreader.c
            modified:   test_sectionnames.c
            modified:   testendian.c

2023-01-14:  David Anderson
    commit f639822721368082423dfea012c1a6938f78b4bc

    Correct two very old mistakes
    in test commands (fixing one, deleting one).
            modified:   DWARFTEST.sh

2023-01-14:  David Anderson
    commit e8df3587750e5729edc3f7976a6789395e283708

    Now just printing the basename for the input paths
            modified:   baselines/test_arangeb.base
            modified:   baselines/test_sectionnamesb.base

2023-01-14:  David Anderson
    commit f0497ef23b9cbce8dc7662bc28f31a8a8e10f182

    Emit the 'basename' for paths passed in
    so regression tests across various
    systems can work nicely.
            modified:   test_arange.c
            modified:   test_pubsreader.c
            modified:   test_sectionnames.c

2023-01-14:  David Anderson
    commit 68c4c0ebe9b4919495566ba672906aa393fb1bf3

    Since ctime may not emit time 0 as a consistent
    time/date across systems we eliminate things
    like
          last time 0x0 Wed Dec 31 16:00:00 1969
    from the baseline in this one case.
            modified:   offsetfromlowpc/baseadvlocf
            modified:   offsetfromlowpc/runtest.sh

2023-01-13:  David Anderson
    commit f02a2305da9912a4d09f3c935f0c968e22bd84fe

    Now with new single tests, running dwarfexample programs
    and some make check functions.
            modified:   DWARFTEST.sh

2023-01-13:  David Anderson
    commit 73f53f23d35cff955c80692689c112ba1d197fc2

    This just used for occasional analysis,
    not normally run.
    Modified to be more useful right now.
            modified:   python3/showruntime.py

2023-01-13:  David Anderson
    commit ca8fb9daf6e8f4b7cc048c2cc902fb4bb247e961

    Corrected the number of tests for percent
    calcs. Need not be exact, but best if
    it is reasonably close.
            modified:   python3/showpct.py

    Now just shows the highest single runtime (user,sys time)
    plus the aggragate.
            modified:   python2/usertime.py
            modified:   python3/usertime.py

2023-01-11:  David Anderson
    commit ee44f5e365ae1af5d615fbba08ccf24f748eb1e4

    Simple corrections, still
    running longer than it should.
            modified:   DWARFTEST.sh

    Failed to add this one before.
            new file:   bitoffset/bitoffset.base

2023-01-11:  David Anderson
    commit 2aa1ae6efe54e90f637a6686b28af58d648de1b1

    Corrected accidental lost of a filediff shell function call
            modified:   DWARFTEST.sh

    Just debugging lines added.
            modified:   RUNVAL

    Some baselines added
    Some changed  due
    to improved Elf file checking.
            modified:   baselines/test_simplereaderb4.base
            new file:   baselines/test_simplereaderb4b.base
            deleted:    bitoffset.base
            modified:   dwarfdump-x86_64-ubuntu.O
            modified:   filelist/baseresult
            modified:   filelist/runtest.sh
            modified:   ossfuzz54724/README
            modified:   showsecgroupsdir/runtest.sh
            modified:   showsecgroupsdir/sgtest.baseline
            modified:   showsecgroupsdir/sgtest2.baseline

    Moved these to baselines/
            deleted:    test_arangeb.base
            deleted:    test_harmlessb.base
            deleted:    test_pubsreaderb.base
            deleted:    test_sectionnamesb.base

    Changed  due
    to improved Elf file checking.
            modified:   testfindfuncbypc/findfuncbypc.base

2023-01-04:  David Anderson
    commit 315a176239b21e743583120e2cd8db24a4806f3c

    Most are old test baselines now using the 'runsingle' shell
    function in DWARFTEST.sh
    Some are new.
            new file:   baselines/test_arangeb.base
            new file:   baselines/test_findfuncbypcb1.base
            new file:   baselines/test_findfuncbypcb2.base
            new file:   baselines/test_findfuncbypcb3.base
            new file:   baselines/test_findfuncbypcb4.base
            new file:   baselines/test_findfuncbypcb5.base
            new file:   baselines/test_harmlessb.base
            new file:   baselines/test_jitreaderb.base
            new file:   baselines/test_pubsreaderb.base
            new file:   baselines/test_sectionnamesb.base
            new file:   baselines/test_showsectiongroupsb.base
            new file:   baselines/test_showsectiongroupsb0.base
            new file:   baselines/test_showsectiongroupsb1.base
            new file:   baselines/test_showsectiongroupsb4.base
            new file:   baselines/test_showsectiongroupsc1.base
            new file:   baselines/test_showsectiongroupsc2.base
            new file:   baselines/test_showsectiongroupsc3.base
            new file:   baselines/test_showsectiongroupsc4.base
            new file:   baselines/test_showsectiongroupsc5.base
            new file:   baselines/test_simplereaderb.base
            new file:   baselines/test_simplereaderb1.base
            new file:   baselines/test_simplereaderb2.base
            new file:   baselines/test_simplereaderb3.base
            new file:   baselines/test_simplereaderb4.base

2023-01-04:  David Anderson
    commit 5e102834cf8ba0fef048a5afc82f968a5c13b198

    New testcase. See bug DW202212-001
            new file:   ossfuzz54724/README
            new file:   ossfuzz54724/clusterfuzz-54724-poc

