dnl Process this file with autoconf to produce a configure script.
dnl
dnl configure can only work sensibly run like ./configure [options]
dnl
AC_INIT()
AC_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_C_BIGENDIAN
AC_GCC_TRADITIONAL
AC_PROG_INSTALL
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(AR, ar)
AC_CANONICAL_SYSTEM

#echo build $build
#echo host $host
#echo target $target
# i686-pc-linux-gnu

# The path to libdwarf source we want is a path to
# the directory containing the libdwarf, dwarfdump, 
# dwarfdump2, dwarfgen, and dwarfexample source directories.

here=`pwd`
fullpath=$here/../code

AC_ARG_ENABLE(libdwarf,
  AC_HELP_STRING([--enable-libdwarf=sourcedirectory],
  [Give the full path to the libdwarf/dwarfdump source base]),
  [ ],[ ])

echo libdwarfval $enableval
if test x$enableval != 'x'
then
  echo $enableval |grep '^/' >junkckpath
  f=`wc -l <junkckpath`
  if test $f != 1
  then
    echo "Error: The libdwarf source path $enableval does not start with /."
    exit 2
  fi
  fullpath=$enableval
  rm junkckpath
fi

case "${host}" in
i*86-pc-linux-gnu*)
  echo "Using x86 linux-gnu for dwarfdump*.O "
  cp dwarfdump2-x86-linux-gnu.O dwarfdump2.O
  cp dwarfdump-x86-linux-gnu.O dwarfdump.O ;;


x86*-*-freebsd*)
  echo "Using x86_64 freebsd for dwarfdump*.O "
  cp dwarfdump-x86_64-freebsd.O dwarfdump.O
  cp dwarfdump2-x86_64-freebsd.O dwarfdump2.O ;;

*) echo "We do not know if there is a workable dwarfdump*.O to use!"
   exit 2 ;;
esac

for i in libdwarf dwarfdump dwarfdump2 dwarfgen dwarfexample
do
  if test -d $fullpath/$i 
  then
    continue
  else
    echo "We did not find the $i source at $fullpath"
    echo "Giving up."
    exit 2
  fi
done

if test ! -f  BASEFILES
then
  cp BASEFILES.in BASEFILES
fi
echo "libdw=$fullpath" >> BASEFILES

echo "Ready to test dwarfdump."

AC_OUTPUT(Makefile)
